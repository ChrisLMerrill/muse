buildscript
    {
    ext.kotlin_version = '1.3.10'
    repositories
        {
        mavenCentral()
        }
    dependencies
        {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // Should the kotlin dependency go in Command-line? Core?
        }
    }

subprojects
    {
    version 0.14

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven-publish'
    apply plugin: 'jacoco'

    group = 'org.musetest'

    repositories
        {
        mavenLocal()
        mavenCentral()
        }

    //noinspection GroovyAssignabilityCheck
    dependencies
        {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compile 'io.github.microutils:kotlin-logging:1.4.6'

        testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.2'
        }

    task copyTestResources(type: Copy) {
        from "${projectDir}/src/test/resources"
        into "${buildDir}/classes/test"
        }

    processTestResources.dependsOn copyTestResources

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
        }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
        }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
        repositories {
            mavenLocal()
        }
    }

    artifacts
        {
        archives sourcesJar
        archives javadocJar
        }

    compileKotlin
        {
        kotlinOptions
            {
            jvmTarget = "1.8"
            }
        }
    compileTestKotlin
        {
        kotlinOptions
            {
            jvmTarget = "1.8"
            }
        }
    }

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
  }

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}
